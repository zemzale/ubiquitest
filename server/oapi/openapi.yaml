openapi: 3.1.0

info:
  title: Ubiquitodo API
  version: 0.0.1

paths:
  /todos:
    get:
      summary: Get all todo items
      responses:
        200:
          description: List of todo items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new todo item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        201:
          description: Created
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /login:
    post:
      summary: Login the user with the given username
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
                  description: The username to login with
                  example: johndoe
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{id}:
    get:
      summary: Get user by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
            x-go-type: uint
          description: The ID of the user
          example: 1
      responses:
        200:
          description: Found user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Todo:
      type: object
      required: 
        - id
        - title
        - created_by
        - completed
      properties:
        id:
          type: string
          format: uuid
          description: The ID of the todo item
          example: c0a0c2c7-a7b6-4e4c-b8a9-c3a4f9c9d0e1
        title:
          type: string
          description: The title of the todo item
          example: Buy groceries
        created_by:
          type: number
          x-go-type: uint
          description: The user id of the user who create the todo item
          example: 1
        completed:
          type: boolean
          description: Whether the todo item is completed
          example: false
    LoginResponse:
      type: object
      required:
        - username
        - id
      properties:
        username:
          type: string
          description: The username of the logged in user
          example: johndoe
        id:
          type: number
          x-go-type: uint
          description: The ID of the user
          example: 1
    Error: 
      type: object
      properties:
        error:
          type: string
          description: The error message
          example: Something went wrong


